---
# GitHub Actions Workflow CI/CD
#

on: [push, pull_request]

jobs:
  test:
    name: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout our code
        uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Run node tests
        working-directory: ./app/serverside
        run: node testAllQuotes.js

  build:
    name: build
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout our code
        uses: actions/checkout@v2
      - name: Setup AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - run: |
          tar -cvf deployment.tar app/data app/serverside
          gzip deployment.tar
          aws s3 cp deployment.tar.gz s3://dan16-quote-bucket/deployment.tar.gz

  system:
    name: system
    needs: [test, build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2    
      - name: Setup AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Setup SSH
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
          name: id_rsa
          known_hosts: none
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Setup InSpec
        run: curl https://omnitruck.chef.io/install.sh | sudo bash -s -- -P inspec
      - name: Terraform Apply
        working-directory: ./terraform/test
        run: |
          aws ec2 authorize-security-group-ingress --group-id sg-074e243dbe08df0e0 --protocol tcp --port 22 --cidr 0.0.0.0/0
          terraform init
          terraform apply --auto-approve
          terraform output --json > ../verify/files/terraform.json
          sed -i '1d' ../verify/files/terraform.json
          sed -i '8,$d' ../verify/files/terraform.json
          aws ec2 revoke-security-group-ingress --group-id sg-074e243dbe08df0e0 --protocol tcp --port 22 --cidr 0.0.0.0/0
      - name: Run InSpec tests
        working-directory: ./terraform/verify
        env: 
          CHEF_LICENSE: accept-no-persist
        run: inspec exec .
      # - name: Terraform Destroy
      #   if: ${{ always() }}
      #   working-directory: ./terraform/test
      #   run: terraform destroy --auto-approve
  deploy:
    name: deploy
    needs: [test, build, system]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
      -  run: echo "deploy stage test"

      # - name: Terraform Apply
      #   working-directory: ./terraform/test
      #   # env:
      #   #   TF_VAR_ssh_private_key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
      #   #   TF_VAR_ssh_fake_key: ${{ secrets.AWS_SSH_FAKE_KEY }}
      #   run: |
      #     ls ~/.ssh
      #     terraform init
      #     terraform apply --auto-approve
      #     terraform output --json > ../verify/files/terraform.json
      #     sed -i '1d' ../verify/files/terraform.json
      #     sed -i '8,$d' ../verify/files/terraform.json
      #     sleep 30


  # ssh stuff
  # ls
  # export IP=$(cat inventory)
  # cat inventory
  # ssh -o "StrictHostKeyChecking=no" ec2-user@$IP whoami


          #   export AWS_IP=$(terraform output --json | head -n -2 | tail -n +2 | jq .instance_ip_addr.value)
          # echo "Does this work?: $AWS_IP"
          # echo 'first head'
          # head -1 ../verify/files/terraform.json
          # echo 'second head'
          # head -9 ../verify/files/terraform.json